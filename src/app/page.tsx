"use client"

import { PublicLayout } from '@/components/layout/PublicLayout';
import { Badge } from '@/components/ui/Badge';
import { BorderBeam } from '@/components/ui/border-beam';
import { Button } from '@/components/ui/Button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import SpotlightHero from '@/components/ui/spotlight-hero';
import { Tabs, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { motion } from 'framer-motion';
import {
  Check,
  CreditCard,
  Search,
  Shield,
  Sparkles,
  Star,
  Users,
  Video,
  Zap
} from 'lucide-react';
import dynamic from 'next/dynamic';
import Link from 'next/link';
import { useState } from 'react';

// Dynamic import for Lottie animation component (lazy-loaded for performance)
const HeroAnimation = dynamic(() => import('@/components/landing/HeroAnimation'), {
  ssr: false,
  loading: () => <div className="w-full max-w-7xl mx-auto h-[32rem] bg-white/5 rounded-lg animate-pulse" />
});

// Dynamic import for the timeline target animation component
const TimelineTarget = dynamic(() => import('@/components/landing/ClaudeSonnet4RetardComponent'), {
  ssr: false,
  loading: () => <div className="w-full h-[300px] bg-white/5 rounded-lg animate-pulse" />
});

// Dynamic import for VelocityScroll component
const VelocityScroll = dynamic(() => import('@/components/ui/velocity-scroll').then(mod => ({ default: mod.VelocityScroll })), {
  ssr: false,
  loading: () => <div className="w-full h-32 bg-white/5 rounded-lg animate-pulse" />
});

export default function LandingPage() {
  const [frequency, setFrequency] = useState('monthly');

  const plans = [
    {
      id: 'free',
      name: 'Free',
      icon: Star,
      price: {
        monthly: 0,
        yearly: 0,
      },
      description: 'Perfect for trying out Target Timeline with basic video search.',
      features: [
        '8 one-time processing credits',
        'Keyword search only',
        'Basic video upload',
        'Standard transcription quality',
        'Email support',
      ],
      cta: 'Get Started Free',
    },
    {
      id: 'pro',
      name: 'Pro',
      icon: Zap,
      price: {
        monthly: 29,
        yearly: 24, // 20% off annually
      },
      description: 'Everything you need to unlock the full power of AI-driven video search.',
      features: [
        '40 monthly processing credits',
        'AI Summaries & Chapters',
        'Viral Moments detection',
        'Advanced search features',
        'Priority processing',
        'Extra credit packs available',
      ],
      cta: 'Start Pro Trial',
      popular: true,
    },
    {
      id: 'studio',
      name: 'Studio',
      icon: Users,
      price: {
        monthly: 79,
        yearly: 63, // 20% off annually
      },
      description: 'Built for teams and content creators who need maximum processing power.',
      features: [
        '150 monthly processing credits',
        'All Pro features included',
        'Team access & collaboration',
        'Bulk video submission',
        'Priority support',
        'Extra credit packs available',
      ],
      cta: 'Start Studio Trial',
    },
  ];
  const features = [
    {
      icon: <Search className="h-6 w-6" />,
      title: 'Intelligent Video Search',
      desc: 'Find specific moments in your videos with powerful full-text search across all transcripts and timestamps.',
    },
    {
      icon: <Sparkles className="h-6 w-6" />,
      title: 'AI-Generated Summaries',
      desc: 'Get intelligent summaries of your video content automatically generated by advanced AI models.',
    },
    {
      icon: <Video className="h-6 w-6" />,
      title: 'Auto Chapters',
      desc: 'Automatically break down your videos into organized chapters with timestamps and descriptions.',
    },
    {
      icon: <Zap className="h-6 w-6" />,
      title: 'Viral Moments Detection',
      desc: 'AI identifies the most engaging and shareable moments in your content for maximum impact.',
    },
    {
      icon: <Shield className="h-6 w-6" />,
      title: 'Secure Processing',
      desc: 'Your videos and transcripts are securely processed with enterprise-grade encryption and privacy.',
    },
    {
      icon: <CreditCard className="h-6 w-6" />,
      title: 'Credit-Based System',
      desc: 'Flexible processing credits - start with 8 free credits, each hour of video costs 1 credit.',
    },
  ]

  return (
    <PublicLayout>
      {/* Hero Section with Spotlight Effect */}
      <SpotlightHero />

      {/* Features Section */}
      <motion.section 
        className="relative py-20"
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
        viewport={{ once: true, margin: "-100px" }}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="text-center mb-16 relative">
            <div className="relative z-10">
              <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
                Everything you need to find content
              </h2>
              <p className="text-xl text-gray-400 max-w-3xl mx-auto">
                Powerful search tools and smart features to help you discover and organize content across all platforms.
              </p>
            </div>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {features.map((feature, index) => (
              <div 
                key={index} 
                className="group relative p-6 rounded-xl border border-neutral-800 bg-neutral-900/50 hover:bg-neutral-900/80 transition-all duration-300 hover:border-neutral-700 hover:shadow-xl hover:shadow-white/10"
                style={{
                  boxShadow: '0 -20px 80px -20px rgba(255, 255, 255, 0.1) inset'
                }}
              >
                <BorderBeam size={250} duration={12} delay={index * 2} />
                <div className="flex items-center mb-4">
                  <div className="flex-shrink-0 w-12 h-12 bg-neutral-800 rounded-full flex items-center justify-center text-white group-hover:text-gray-300 transition-colors">
                    {feature.icon}
                  </div>
                </div>
                <h3 className="text-xl font-semibold text-white mb-2 group-hover:text-white transition-colors">
                  {feature.title}
                </h3>
                <p className="text-gray-400 leading-relaxed">
                  {feature.desc}
                </p>
              </div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* How It Works Section */}
      <motion.section 
        className="relative py-20 overflow-hidden"
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
        viewport={{ once: true, margin: "-100px" }}
      >
        <div className="relative z-10 max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-white mb-4">
              How It Works
            </h2>
            <p className="text-xl text-gray-400 max-w-2xl mx-auto">
              Get started in three simple steps
            </p>
          </div>

          {/* Timeline */}
          <div className="relative">
            {/* Vertical line - connects all circles but stops at step 3 */}
            <div className="absolute left-8 top-0 h-80 w-px bg-gradient-to-b from-white/20 via-white/40 to-white/20"></div>
            
            <div className="space-y-12">
              {/* Step 1 */}
              <div className="relative flex items-start">
                <div className="flex-shrink-0 w-16 h-16 bg-gradient-to-br from-white/20 to-white/10 rounded-full flex items-center justify-center border border-white/20 relative z-10 bg-black">
                  <span className="text-xl font-bold text-white">1</span>
                </div>
                <div className="ml-8 flex-1">
                  <h3 className="text-2xl font-semibold text-white mb-3">
                    Upload Your Video
                  </h3>
                  <p className="text-gray-400 text-lg leading-relaxed">
                    Paste a video URL or upload your file. We support most common video formats and streaming platforms including YouTube, Vimeo, and direct uploads.
                  </p>
                </div>
              </div>

              {/* Step 2 */}
              <div className="relative flex items-start">
                <div className="flex-shrink-0 w-16 h-16 bg-gradient-to-br from-white/20 to-white/10 rounded-full flex items-center justify-center border border-white/20 relative z-10 bg-black">
                  <span className="text-xl font-bold text-white">2</span>
                </div>
                <div className="ml-8 flex-1">
                  <h3 className="text-2xl font-semibold text-white mb-3">
                    Get Transcription
                  </h3>
                  <p className="text-gray-400 text-lg leading-relaxed">
                    Our AI processes your video and creates accurate transcripts with precise timestamps. Each hour of video costs 1 processing credit.
                  </p>
                </div>
              </div>

              {/* Step 3 */}
              <div className="relative flex items-start">
                <div className="flex-shrink-0 w-16 h-16 bg-gradient-to-br from-white/20 to-white/10 rounded-full flex items-center justify-center border border-white/20 relative z-10 bg-black">
                  <span className="text-xl font-bold text-white">3</span>
                </div>
                <div className="ml-8 flex-1">
                  <h3 className="text-2xl font-semibold text-white mb-3">
                    Search & Discover
                  </h3>
                  <p className="text-gray-400 text-lg leading-relaxed">
                    Search through your transcripts to find exact moments, quotes, or topics instantly. Jump directly to any timestamp with one click.
                  </p>
                </div>
              </div>
            </div>

            {/* Timeline Target Animation */}
            <TimelineTarget />
          </div>
        </div>
      </motion.section>

      {/* Pricing Section */}
      <motion.section 
        className="relative py-20 overflow-hidden"
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
        viewport={{ once: true, margin: "-100px" }}
      >
        <div className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-col items-center justify-center gap-8">
            <div className="flex flex-col items-center space-y-2">
              <Badge
                variant="outline"
                className="border-white/20 bg-white/5 mb-4 rounded-full px-4 py-1 text-sm font-medium text-white"
              >
                <Sparkles className="mr-1 h-3.5 w-3.5 animate-pulse text-white" />
                Pricing Plans
              </Badge>
              <h2 className="text-4xl md:text-5xl font-bold text-white mb-4 bg-gradient-to-r from-white via-gray-200 to-white bg-clip-text text-transparent">
                Pick the perfect plan for your needs
              </h2>
              <p className="text-xl text-gray-400 max-w-md pt-2">
                Simple, transparent pricing that scales with your business. No hidden fees, no surprises.
              </p>
            </div>

            <div className="inline-block rounded-full p-1 shadow-sm bg-neutral-800/30">
              <Tabs
                defaultValue={frequency}
                onValueChange={setFrequency}
              >
                <TabsList className="bg-transparent">
                  <TabsTrigger
                    value="monthly"
                    className="rounded-full transition-all duration-300 text-gray-400 data-[state=active]:bg-white data-[state=active]:text-black"
                  >
                    Monthly
                  </TabsTrigger>
                  <TabsTrigger
                    value="yearly"
                    className="rounded-full transition-all duration-300 text-gray-400 data-[state=active]:bg-white data-[state=active]:text-black"
                  >
                    Yearly
                    <Badge
                      variant="secondary"
                      className="bg-white/10 text-white hover:bg-white/15 ml-2"
                    >
                      20% off
                    </Badge>
                  </TabsTrigger>
                </TabsList>
              </Tabs>
            </div>

            <div className="mt-8 grid w-full max-w-6xl grid-cols-1 gap-6 lg:grid-cols-3">
              {plans.map((plan, index) => (
                <div
                  key={plan.id}
                  className="flex"
                >
                  <Card
                    className={`relative h-full w-full text-left transition-all duration-300 hover:shadow-lg bg-neutral-900/50 ${
                      plan.popular
                        ? 'border-white/70 border-2 shadow-lg bg-gradient-to-b from-white/[0.03] to-transparent bg-neutral-900/65'
                        : 'border-neutral-800 hover:border-white/30'
                    }`}
                    style={{
                      boxShadow: plan.popular 
                        ? '0 -20px 100px -20px rgba(255, 255, 255, 0.25) inset'
                        : '0 -20px 80px -20px rgba(255, 255, 255, 0.1) inset'
                    }}
                  >
                    {/* Add BorderBeam to Free and Studio cards only */}
                    {!plan.popular && (
                      <BorderBeam size={250} duration={15} delay={index * 3} />
                    )}
                    
                    {plan.popular && (
                      <div className="absolute -top-3 right-0 left-0 mx-auto w-fit">
                        <Badge className="bg-white/90 text-black rounded-full px-4 py-1 shadow-sm">
                          <Sparkles className="mr-1 h-3.5 w-3.5" />
                          Popular
                        </Badge>
                      </div>
                    )}
                    <CardHeader className={`pb-4 ${plan.popular ? 'pt-8' : ''}`}>
                      <div className="flex items-center gap-2">
                        <div
                          className={`flex h-8 w-8 items-center justify-center rounded-full ${
                            plan.popular
                              ? 'bg-white/10 text-white'
                              : 'bg-neutral-800 text-white'
                          }`}
                        >
                          <plan.icon className="h-4 w-4" />
                        </div>
                        <CardTitle
                          className={`text-xl font-bold ${
                            plan.popular ? 'text-white' : 'text-white'
                          }`}
                        >
                          {plan.name}
                        </CardTitle>
                      </div>
                      <CardDescription className="mt-3 space-y-2">
                        <p className="text-sm text-gray-400">{plan.description}</p>
                        <div className="pt-2">
                          {plan.price[frequency as keyof typeof plan.price] === 0 ? (
                            <span className={`text-3xl font-bold ${plan.popular ? 'text-white' : 'text-white'}`}>
                              Free
                            </span>
                          ) : (
                            <div className="flex items-baseline">
                              <span className={`text-3xl font-bold ${plan.popular ? 'text-white' : 'text-white'}`}>
                                ${plan.price[frequency as keyof typeof plan.price]}
                              </span>
                              <span className="ml-1 text-sm text-gray-400">
                                /month{frequency === 'yearly' ? ', billed yearly' : ''}
                              </span>
                            </div>
                          )}
                        </div>
                      </CardDescription>
                    </CardHeader>
                    <CardContent className="grid gap-3 pb-6">
                      {plan.features.map((feature, index) => (
                        <div
                          key={index}
                          className="flex items-center gap-2 text-sm"
                        >
                          <div
                            className={`flex h-5 w-5 items-center justify-center rounded-full ${
                              plan.popular
                                ? 'bg-white/10 text-white'
                                : 'bg-neutral-800 text-white'
                            }`}
                          >
                            <Check className="h-3.5 w-3.5" />
                          </div>
                          <span className="text-gray-300">
                            {feature}
                          </span>
                        </div>
                      ))}
                    </CardContent>
                    <CardFooter>
                      <Link href="/signup" className="w-full">
                        <Button
                          variant={plan.popular ? 'default' : 'outline'}
                          className={`w-full font-medium transition-all duration-300 ${
                            plan.popular
                              ? 'bg-white/90 text-black hover:bg-gray-100 hover:shadow-white/20 hover:shadow-md'
                              : 'border-white/30 text-white hover:bg-white/5 hover:text-white'
                          }`}
                        >
                          {plan.cta}
                        </Button>
                      </Link>
                    </CardFooter>
                  </Card>
                </div>
              ))}
            </div>
          </div>
        </div>
      </motion.section>

      {/* CTA Section */}
      <motion.section 
        className="relative py-24 overflow-hidden"
        initial={{ opacity: 0, y: 50 }}
        whileInView={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
        viewport={{ once: true, margin: "-100px" }}
      >
        <div className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center">
            
            {/* VelocityScroll Text with extra spacing */}
            <div className="mb-12 mt-8">
              <VelocityScroll 
                text="Ready to Transform Your Video Search?" 
                default_velocity={3}
                className="text-4xl md:text-5xl font-bold text-white"
              />
            </div>
            
            <p className="text-xl text-gray-300 mb-10 max-w-3xl mx-auto leading-relaxed">
              Join thousands of users who are already discovering content faster with our powerful video search platform.
            </p>
            <div className="flex flex-col sm:flex-row gap-6 justify-center">
              <Link href="/signup">
                <Button size="lg" className="px-10 py-4 text-lg font-semibold bg-white/90 text-black hover:bg-gray-100 transition-all duration-200">
                  Get Started Free
                </Button>
              </Link>
              <Link href="/about">
                <Button variant="outline" size="lg" className="px-10 py-4 text-lg font-semibold border-gray-600 text-white hover:bg-gray-800 hover:border-gray-500 transition-all duration-200">
                  Learn More
                </Button>
              </Link>
            </div>
          </div>
        </div>
      </motion.section>
    </PublicLayout>
  )
}